const express = require("express")
const connectToLnNode = require("@radar/lnrpc")
const uuid = require("uuid")

async function start() {
    const app = express()

    const lnRpc = await connectToLnNode({
        server:         "localhost:10009", // 10009 is the GRPC port of the server LND node
        tls:            "./lnd_server/tls.cert", // Generated by LND
        macaroonPath:   "./lnd_server/data/chain/bitcoin/testnet/admin.macaroon", // Generated by LND, specific to testnet
    })
    console.log("LND info:", await lnRpc.getInfo())

    const hasBeenPaid = {}
    const invoiceStream = await lnRpc.subscribeInvoices()
    invoiceStream.on("data", (invoice) => {
        console.log("Reading invoice", invoice)
        if (invoice.settled) {
            const purchaseId = invoice.memo.split("||")[1].trim()
            hasBeenPaid[purchaseId] = true
        }
    })

    app.get("/weather", async (req, res) => {
        let purchaseId = req.header("X-Purchase-Id")
        if (purchaseId) {
            console.log("Checking purchase", purchaseId)
            if (hasBeenPaid[purchaseId]) {
                res.send("Cloudy starting later this afternoon, with a chance of Lightning.\n")
            } else {
                res.status(400).send("Invoice not paid")
            }
        } else {
            purchaseId = uuid.v4()
            console.log("New purchase", purchaseId)
            const invoice = await lnRpc.addInvoice({
                value: 1,
                memo: `Weather report || ${purchaseId}`
            })
            res.status(402)
                .header("X-Purchase-Id", purchaseId)
                .send(`${invoice.paymentRequest}\n`)
        }
    })

    app.listen(8000)
}

start().then(() => console.log("Listening on :8000"))
